groups:
- jobs:
  - management-dev
  - management
  name: master
- jobs:
  - docker-poc-gha-ecr-pr
  name: pull-request
jobs:
- max_in_flight: 1
  name: management-dev
  plan:
  - get: docker-poc-gha-ecr
    trigger: true
  - config:
      image_resource:
        source:
          repository: ((dataworks.docker_awscli_repository))
          tag: ((dataworks.docker_awscli_version))
          version: ((dataworks.docker_awscli_version))
        type: docker-image
      inputs:
      - name: docker-poc-gha-ecr
      outputs:
      - name: terraform-bootstrap
      params:
        AWS_REGION: ((dataworks.aws_region))
      platform: linux
      run:
        args:
        - -exc
        - |
          python bootstrap_terraform.py
          cp terraform.tf accounts.json ../terraform-bootstrap
        dir: docker-poc-gha-ecr
        path: sh
    task: terraform-bootstrap
  - config:
      image_resource:
        source:
          repository: ((dataworks.docker_awscli_repository))
          tag: ((dataworks.docker_awscli_version))
          version: ((dataworks.docker_awscli_version))
        type: docker-image
      inputs:
      - name: docker-poc-gha-ecr
      - name: terraform-bootstrap
      outputs:
      - name: gha_ecr_sts_creds
      params:
        AWS_REGION: ((dataworks.aws_region))
      platform: linux
      run:
        args:
        - -exc
        - "cp ../terraform-bootstrap/accounts.json .\n./get_ecr_sts_credentials.sh
          \ncp gha_ecr_sts_creds ../gha_ecr_sts_creds\n"
        dir: docker-poc-gha-ecr
        path: sh
    task: get-gha-ecr-creds
  - config:
      image_resource:
        source:
          repository: ((dataworks.terraform_repository))
          tag: ((dataworks.terraform_13_version))
        type: docker-image
      inputs:
      - name: docker-poc-gha-ecr
      - name: terraform-bootstrap
      - name: gha_ecr_sts_creds
      params:
        TF_CLI_ARGS_apply: -lock-timeout=300s
        TF_CLI_ARGS_plan: -lock-timeout=300s
        TF_INPUT: false
        TF_VAR_costcode: ((dataworks.costcode))
        TF_VAR_github_token: ((dataworks-secrets.concourse_github_pat))
      platform: linux
      run:
        args:
        - -exc
        - |
          cp ../terraform-bootstrap/terraform.tf .
          terraform workspace show
          terraform init --upgrade
          terraform plan -out terraform.plan
          terraform apply -auto-approve terraform.plan
        dir: docker-poc-gha-ecr
        path: sh
    task: terraform-apply
  - config:
      image_resource:
        source:
          repository: ((dataworks.terraform_repository))
          tag: ((dataworks.terraform_13_version))
        type: docker-image
      inputs:
      - name: docker-poc-gha-ecr
      - name: terraform-bootstrap
      - name: gha_ecr_sts_creds
      params:
        TF_CLI_ARGS_apply: -lock-timeout=300s
        TF_CLI_ARGS_plan: -lock-timeout=300s
        TF_INPUT: false
        TF_VAR_costcode: ((dataworks.costcode))
      platform: linux
      run:
        args:
        - -exc
        - |
          cp ../terraform-bootstrap/terraform.tf .
          echo "Loading STS creds with shell debug disabled"
          set +x
          source ../gha_ecr_sts_creds/gha_ecr_sts_creds
          set -x
          terraform workspace show
          terraform init --upgrade
          terraform plan $DETAILED_EXITCODE
        dir: docker-poc-gha-ecr
        path: sh
    params:
      DETAILED_EXITCODE: -detailed-exitcode
      TF_VAR_github_token: ((dataworks-secrets.concourse_github_pat))
    task: terraform-plan
- max_in_flight: 1
  name: management
  plan:
  - get: docker-poc-gha-ecr
    passed:
    - management-dev
    trigger: true
  - get: dataworks-github-config
    trigger: true
  - config:
      image_resource:
        source:
          repository: ((dataworks.docker_awscli_repository))
          tag: ((dataworks.docker_awscli_version))
          version: ((dataworks.docker_awscli_version))
        type: docker-image
      inputs:
      - name: docker-poc-gha-ecr
      outputs:
      - name: terraform-bootstrap
      params:
        AWS_REGION: ((dataworks.aws_region))
      platform: linux
      run:
        args:
        - -exc
        - |
          python bootstrap_terraform.py
          cp terraform.tf accounts.json ../terraform-bootstrap
        dir: docker-poc-gha-ecr
        path: sh
    task: terraform-bootstrap
  - config:
      image_resource:
        source:
          repository: dwpdigital/jinja-yaml-aws
          tag: 0.0.19
          version: 0.0.19
        type: docker-image
      inputs:
      - name: dataworks-github-config
      outputs:
      - name: terraform-bootstrap-githubconfig
      params:
        AWS_REGION: eu-west-2
        AWS_SECRETS_ROLE: arn:aws:iam::((aws_account.management)):role/ci
      platform: linux
      run:
        args:
        - -exc
        - |
          python bootstrap_terraform.py
          cp terraform.tf ../terraform-bootstrap-githubconfig
          cp terraform.tfvars ../terraform-bootstrap-githubconfig
        dir: dataworks-github-config
        path: sh
    task: terraform-bootstrap-githubconfig
  - config:
      image_resource:
        source:
          repository: ((dataworks.docker_awscli_repository))
          tag: ((dataworks.docker_awscli_version))
          version: ((dataworks.docker_awscli_version))
        type: docker-image
      inputs:
      - name: docker-poc-gha-ecr
      - name: terraform-bootstrap
      outputs:
      - name: gha_ecr_sts_creds
      params:
        AWS_REGION: ((dataworks.aws_region))
      platform: linux
      run:
        args:
        - -exc
        - "cp ../terraform-bootstrap/accounts.json .\n./get_ecr_sts_credentials.sh
          \ncp gha_ecr_sts_creds ../gha_ecr_sts_creds\n"
        dir: docker-poc-gha-ecr
        path: sh
    task: get-gha-ecr-creds
  - config:
      image_resource:
        source:
          repository: ((dataworks.terraform_repository))
          tag: ((dataworks.terraform_13_version))
        type: docker-image
      inputs:
      - name: dataworks-github-config
      - name: terraform-bootstrap-githubconfig
      - name: gha_ecr_sts_creds
      params:
        TF_CLI_ARGS_apply: -lock-timeout=300s
        TF_CLI_ARGS_plan: -lock-timeout=300s
        TF_INPUT: false
        TF_VAR_costcode: ((dataworks.costcode))
        TF_VAR_github_token: ((dataworks-secrets.concourse_github_pat))
      platform: linux
      run:
        args:
        - -exc
        - |
          cp ../terraform-bootstrap-githubconfig/* .
          echo "Loading STS creds with shell debug disabled"
          set +x
          source ../gha_ecr_sts_creds/gha_ecr_sts_creds
          set -x
          terraform workspace show
          terraform init --upgrade
          terraform plan -target github_actions_secret.dev_ecr_temp_access_key_id -target github_actions_secret.dev_ecr_temp_access_secret_key -target github_actions_secret.dev_ecr_temp_access_session_token -target github_actions_secret.dev_aws_account -target github_actions_secret.ecr_temp_access_key_id -target github_actions_secret.ecr_temp_access_secret_key -target github_actions_secret.ecr_temp_access_session_token -target github_actions_secret.aws_account -out terraform.plan
          terraform apply -auto-approve terraform.plan
        dir: dataworks-github-config
        path: sh
    task: terraform-apply-githubconfig
  - config:
      image_resource:
        source:
          repository: ((dataworks.terraform_repository))
          tag: ((dataworks.terraform_13_version))
        type: docker-image
      inputs:
      - name: docker-poc-gha-ecr
      - name: terraform-bootstrap
      - name: gha_ecr_sts_creds
      params:
        TF_CLI_ARGS_apply: -lock-timeout=300s
        TF_CLI_ARGS_plan: -lock-timeout=300s
        TF_INPUT: false
        TF_VAR_costcode: ((dataworks.costcode))
        TF_VAR_github_token: ((dataworks-secrets.concourse_github_pat))
      platform: linux
      run:
        args:
        - -exc
        - |
          cp ../terraform-bootstrap/terraform.tf .
          terraform workspace show
          terraform init --upgrade
          terraform plan -out terraform.plan
          terraform apply -auto-approve terraform.plan
        dir: docker-poc-gha-ecr
        path: sh
    params:
      TF_WORKSPACE: management
    task: terraform-apply
  - config:
      image_resource:
        source:
          repository: ((dataworks.terraform_repository))
          tag: ((dataworks.terraform_13_version))
        type: docker-image
      inputs:
      - name: dataworks-github-config
      - name: terraform-bootstrap-githubconfig
      - name: gha_ecr_sts_creds
      params:
        TF_CLI_ARGS_apply: -lock-timeout=300s
        TF_CLI_ARGS_plan: -lock-timeout=300s
        TF_INPUT: false
        TF_VAR_costcode: ((dataworks.costcode))
      platform: linux
      run:
        args:
        - -exc
        - |
          cp ../terraform-bootstrap-githubconfig/* .
          echo "Loading STS creds with shell debug disabled"
          set +x
          source ../gha_ecr_sts_creds/gha_ecr_sts_creds
          set -x
          terraform workspace show
          terraform init --upgrade
          terraform plan -target github_actions_secret.dev_ecr_temp_access_key_id -target github_actions_secret.dev_ecr_temp_access_secret_key -target github_actions_secret.dev_ecr_temp_access_session_token -target github_actions_secret.dev_aws_account -target github_actions_secret.ecr_temp_access_key_id -target github_actions_secret.ecr_temp_access_secret_key -target github_actions_secret.ecr_temp_access_session_token -target github_actions_secret.aws_account $DETAILED_EXITCODE
        dir: dataworks-github-config
        path: sh
    params:
      DETAILED_EXITCODE: -detailed-exitcode
      TF_CLI_ARGS_plan: -lock-timeout=300s
      TF_INPUT: "false"
      TF_VAR_dockerhub_password: ((dataworks-secrets.dockerhub_token))
      TF_VAR_dockerhub_username: ((dataworks.dockerhub_username))
      TF_VAR_github_email: ((dataworks.concourse_github_email))
      TF_VAR_github_organization: dwp
      TF_VAR_github_token: ((dataworks-secrets.concourse_github_pat))
      TF_VAR_github_username: ((dataworks.concourse_github_username))
      TF_VAR_github_webhook_token: ((dataworks.concourse_github_webhook_token))
      TF_VAR_slack_webhook_url: ((dataworks.slack_webhook_url))
      TF_VAR_snyk_token: ((dataworks-secrets.snyk_token))
      TF_VAR_terraform_12_version: ((dataworks.terraform_12_version))
      TF_VAR_terraform_13_version: ((dataworks.terraform_13_version))
      TF_VAR_terraform_version: ((dataworks.terraform_version))
    task: terraform-plan-githubconfig
  - config:
      image_resource:
        source:
          repository: ((dataworks.terraform_repository))
          tag: ((dataworks.terraform_13_version))
        type: docker-image
      inputs:
      - name: docker-poc-gha-ecr
      - name: terraform-bootstrap
      - name: gha_ecr_sts_creds
      params:
        TF_CLI_ARGS_apply: -lock-timeout=300s
        TF_CLI_ARGS_plan: -lock-timeout=300s
        TF_INPUT: false
        TF_VAR_costcode: ((dataworks.costcode))
      platform: linux
      run:
        args:
        - -exc
        - |
          cp ../terraform-bootstrap/terraform.tf .
          echo "Loading STS creds with shell debug disabled"
          set +x
          source ../gha_ecr_sts_creds/gha_ecr_sts_creds
          set -x
          terraform workspace show
          terraform init --upgrade
          terraform plan $DETAILED_EXITCODE
        dir: docker-poc-gha-ecr
        path: sh
    params:
      DETAILED_EXITCODE: -detailed-exitcode
      TF_VAR_github_token: ((dataworks-secrets.concourse_github_pat))
      TF_WORKSPACE: management
    task: terraform-plan
  - config:
      image_resource:
        source:
          repository: ((dataworks.docker_awscli_repository))
          tag: ((dataworks.docker_awscli_version))
          version: ((dataworks.docker_awscli_version))
        type: docker-image
      params:
        CONCOURSE_GITHUB_USERNAME: ((dataworks.concourse_github_username))
        GITHUB_TOKEN: ((dataworks-secrets.concourse_github_pat))
      platform: linux
      run:
        args:
        - -ec
        - |
          curl -X POST -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/dwp/docker-poc-gha-ecr/actions/workflows/main.yml/dispatches \
          -d '{"ref": "master"}' -u "$CONCOURSE_GITHUB_USERNAME:$GITHUB_TOKEN"
        path: sh
    task: trigger-gha-workflow
- name: docker-poc-gha-ecr-pr
  plan:
  - get: docker-poc-gha-ecr-pr
    trigger: true
    version: every
  - params:
      path: docker-poc-gha-ecr-pr
      status: pending
    put: docker-poc-gha-ecr-pr
  - config:
      image_resource:
        source:
          repository: ((dataworks.docker_awscli_repository))
          tag: ((dataworks.docker_awscli_version))
          version: ((dataworks.docker_awscli_version))
        type: docker-image
      inputs:
      - name: docker-poc-gha-ecr
      outputs:
      - name: terraform-bootstrap
      params:
        AWS_REGION: ((dataworks.aws_region))
      platform: linux
      run:
        args:
        - -exc
        - |
          python bootstrap_terraform.py
          cp terraform.tf accounts.json ../terraform-bootstrap
        dir: docker-poc-gha-ecr
        path: sh
    input_mapping:
      docker-poc-gha-ecr: docker-poc-gha-ecr-pr
    task: terraform-bootstrap
  - config:
      image_resource:
        source:
          repository: ((dataworks.docker_awscli_repository))
          tag: ((dataworks.docker_awscli_version))
          version: ((dataworks.docker_awscli_version))
        type: docker-image
      inputs:
      - name: docker-poc-gha-ecr
      - name: terraform-bootstrap
      outputs:
      - name: gha_ecr_sts_creds
      params:
        AWS_REGION: ((dataworks.aws_region))
      platform: linux
      run:
        args:
        - -exc
        - "cp ../terraform-bootstrap/accounts.json .\n./get_ecr_sts_credentials.sh
          \ncp gha_ecr_sts_creds ../gha_ecr_sts_creds\n"
        dir: docker-poc-gha-ecr
        path: sh
    input_mapping:
      docker-poc-gha-ecr: docker-poc-gha-ecr-pr
    task: get-gha-ecr-creds
  - config:
      image_resource:
        source:
          repository: ((dataworks.terraform_repository))
          tag: ((dataworks.terraform_13_version))
        type: docker-image
      inputs:
      - name: docker-poc-gha-ecr
      - name: terraform-bootstrap
      - name: gha_ecr_sts_creds
      params:
        TF_CLI_ARGS_apply: -lock-timeout=300s
        TF_CLI_ARGS_plan: -lock-timeout=300s
        TF_INPUT: false
        TF_VAR_costcode: ((dataworks.costcode))
      platform: linux
      run:
        args:
        - -exc
        - |
          cp ../terraform-bootstrap/terraform.tf .
          echo "Loading STS creds with shell debug disabled"
          set +x
          source ../gha_ecr_sts_creds/gha_ecr_sts_creds
          set -x
          terraform workspace show
          terraform init --upgrade
          terraform plan $DETAILED_EXITCODE
        dir: docker-poc-gha-ecr
        path: sh
    input_mapping:
      docker-poc-gha-ecr: docker-poc-gha-ecr-pr
    on_failure:
      params:
        path: docker-poc-gha-ecr-pr
        status: failure
      put: docker-poc-gha-ecr-pr
    on_success:
      params:
        path: docker-poc-gha-ecr-pr
        status: success
      put: docker-poc-gha-ecr-pr
    params:
      DETAILED_EXITCODE: ""
      TF_VAR_github_token: ((dataworks-secrets.concourse_github_pat))
      TF_WORKSPACE: management
    task: terraform-plan
resource_types:
- name: pull-request
  source:
    repository: teliaoss/github-pr-resource
    tag: latest
  type: docker-image
- name: registry-image-resource
  source:
    repository: dwpdigital/registry-image-resource
    tag: latest
  type: docker-image
resources:
- check_every: 720h
  name: docker-poc-gha-ecr-pr
  source:
    access_token: ((dataworks-secrets.concourse_github_pat))
    repository: dwp/docker-poc-gha-ecr
  type: pull-request
  webhook_token: ((dataworks.concourse_github_webhook_token))
- check_every: 720h
  name: docker-poc-gha-ecr
  source:
    access_token: ((dataworks-secrets.concourse_github_pat))
    branch: master
    uri: https://github.com/dwp/docker-poc-gha-ecr.git
  type: git
  webhook_token: ((dataworks.concourse_github_webhook_token))
- check_every: 720h
  name: dataworks-github-config
  source:
    access_token: ((dataworks-secrets.concourse_github_pat))
    branch: master
    uri: https://github.com/dwp/dataworks-github-config.git
  type: git
  webhook_token: ((dataworks.concourse_github_webhook_token))
