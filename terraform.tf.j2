terraform {
  required_version = "{{terraform.terraform_version}}"

  backend "s3" {
    bucket         = "{{terraform.state_file_bucket}}"
    key            = "terraform/dataworks/docker-poc-gha-ecr.tfstate"
    region         = "{{terraform.state_file_region}}"
    encrypt        = true
    kms_key_id     = "arn:aws:kms:{{terraform.state_file_region}}:{{terraform.state_file_account}}:key/{{terraform.state_file_kms_key}}"
    dynamodb_table = "remote_state_locks"
  }
}

data "terraform_remote_state" "management" {
  backend = "s3"
  workspace = "management"

  config = {
    bucket         = "{{terraform.state_file_bucket}}"
    key            = "terraform/dataworks/management.tfstate"
    region         = "{{terraform.state_file_region}}"
    encrypt        = true
    kms_key_id     = "arn:aws:kms:{{terraform.state_file_region}}:{{terraform.state_file_account}}:key/{{terraform.state_file_kms_key}}"
    dynamodb_table = "remote_state_locks"
  }
}

provider "aws" {
version = "~> 3.42.0"
  region  = "{{terraform.provider_region}}"

  assume_role {
    role_arn = "arn:aws:iam::${lookup(local.account, local.environment)}:role/${var.assume_role}"
  }
}

locals {
  name        = "docker-poc-gha-ecr"
  environment = terraform.workspace == "default" ? "management-dev" : terraform.workspace

  account = {
    {%- for key, value in accounts.items() %}
      {{key}} = "{{value}}"
    {%- endfor %}
  }

  common_tags = {
    {%- for key, value in common_tags.items() %}
      {{key}} = "{{value}}"
    {%- endfor %}
    Name         = local.name
    Environment  = local.environment
    Application  = local.name
    Persistence  = "True"
    AutoShutdown = "False"
    Costcode     = var.costcode
    Team         = "DataWorks"
  }

  cidr_block = {
  {%- for environment, ranges in cidr_block.items() %}
      {{ environment }} = {
        {%- for key, value in ranges.items() %}
          {{ key }} = "{{ value }}"{% endfor %}
      } {%- endfor %}
  }
}

{%- if terraform.dataworks_mgmt_env == "management" %}
provider "github" {
  token        = var.github_token
  organization = var.github_organization
  version      = "~> 2.6.1"
}{%- endif %}

